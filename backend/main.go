package main

import (
	"backend/handlers"
	"log"
	"net/http"
	"os"
	"strings"

	"github.com/joho/godotenv"
)

// Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∞–¥–º–∏–Ω–∫–∏
func protectAdminFiles(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		// –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º –∞–¥–º–∏–Ω–∫–∏
		if strings.HasPrefix(r.URL.Path, "/admin.html") || 
		   strings.HasPrefix(r.URL.Path, "/admin-login.html") {
			log.Printf("üö´ Blocked direct access to admin file: %s from %s", r.URL.Path, r.RemoteAddr)
			http.Error(w, "Access denied", http.StatusForbidden)
			return
		}
		next.ServeHTTP(w, r)
	})
}

func main() {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
	if err := godotenv.Load(); err != nil {
		log.Println("Warning: .env file not found")
	}

	// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞ (–∏–∑ –ø–∞–ø–∫–∏ html) —Å –∑–∞—â–∏—Ç–æ–π
	http.Handle("/", protectAdminFiles(http.FileServer(http.Dir("./../html"))))

	// API endpoints
	http.HandleFunc("/api/send-form", handlers.SendToTelegramHandler)
	http.HandleFunc("/api/projects", handlers.GetProjectsHandler)

	// –ê–¥–º–∏–Ω–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π
	http.HandleFunc("/admin", handlers.RequireAuth(handlers.AdminHandler))
	http.HandleFunc("/admin/login", handlers.AdminLoginHandler)
	http.HandleFunc("/admin/api/projects", handlers.ProtectAPI(handlers.AdminAPIHandler))

	port := os.Getenv("PORT")
	if port == "" {
		port = "3000"
	}

	log.Printf("üöÄ Server starting on :%s", port)
	log.Printf("üì± Main site: http://localhost:%s", port)
	log.Printf("üîê Admin panel: http://localhost:%s/admin", port)
	log.Printf("üõ°Ô∏è  Admin files protection: ENABLED")
	log.Fatal(http.ListenAndServe(":"+port, nil))
}